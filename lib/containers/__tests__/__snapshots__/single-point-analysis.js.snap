// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Containers > Single Point should render correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(SinglePointAnalysis)>
    <SinglePointAnalysis
      clearComparisonProject={[Function]}
      comparisonDestinationTravelTimeDistribution={null}
      comparisonIsochrone={null}
      createRegionalAnalysis={[Function]}
      currentProject={
        Object {
          "_id": "1",
          "accessGroup": "accessGroupName",
          "bundleId": "1",
          "createdAt": "2017-11-08T12:30:50.133Z",
          "createdBy": "person@gmail.com",
          "name": "Mock Project",
          "nonce": "12345",
          "regionId": "1",
          "updatedAt": "2017-11-08T12:31:19.602Z",
          "updatedBy": "person@gmail.com",
          "variants": Array [
            "Default",
          ],
        }
      }
      destinationTravelTimeDistribution={null}
      downloadComparisonIsochrone={[Function]}
      downloadIsochrone={[Function]}
      fetchTravelTimeSurface={[Function]}
      isFetchingIsochrone={false}
      isochrone={null}
      loadAllRegionalAnalyses={[Function]}
      profileRequest={
        Object {
          "accessModes": "WALK",
          "bikeSafe": 1,
          "bikeSlope": 1,
          "bikeSpeed": 4.166666666666667,
          "bikeTime": 1,
          "bounds": Object {
            "east": -76,
            "north": 39,
            "south": 38,
            "west": -77,
          },
          "bundleId": "1",
          "date": "2016-01-16",
          "defaultExpanded": true,
          "directModes": "WALK",
          "egressModes": "WALK",
          "fromLat": 12,
          "fromLon": 34,
          "fromTime": 25200,
          "maxBikeTime": 20,
          "maxRides": 4,
          "maxTripDurationMinutes": 60,
          "maxWalkTime": 20,
          "monteCarloDraws": 200,
          "name": "Profile Request Test",
          "projectId": "1",
          "reachabilityThreshold": 0,
          "regionId": "1",
          "toTime": 32400,
          "transitModes": "BUS,TRAM,RAIL,SUBWAY",
          "travelTimePercentile": 50,
          "variantIndex": 0,
          "walkSpeed": 1.3888888888888888,
          "workerVersion": "v4.0.0",
        }
      }
      profileRequestHasChanged={true}
      projects={
        Array [
          Object {
            "_id": "1",
            "accessGroup": "accessGroupName",
            "bundleId": "1",
            "createdAt": "2017-11-08T12:30:50.133Z",
            "createdBy": "person@gmail.com",
            "name": "Mock Project",
            "nonce": "12345",
            "regionId": "1",
            "updatedAt": "2017-11-08T12:31:19.602Z",
            "updatedBy": "person@gmail.com",
            "variants": Array [
              "Default",
            ],
          },
        ]
      }
      push={[Function]}
      regionBounds={
        Object {
          "east": -76,
          "north": 39,
          "south": 38,
          "west": -77,
        }
      }
      regionId="1"
      regionalAnalyses={Array []}
      regionalAnalysisBounds={
        Object {
          "east": -76,
          "north": 39,
          "south": 38,
          "west": -77,
        }
      }
      removeDestination={[Function]}
      setComparisonProject={[Function]}
      setCurrentProject={[Function]}
      setDestination={[Function]}
      setProfileRequest={[Function]}
    >
      <div>
        <Connect(Sidebar)>
          <Sidebar
            currentPath="blank"
            dispatch={[Function]}
            outstandingRequests={0}
            projectId="1"
            regionId="1"
          >
            <div
              className="Sidebar"
            >
              <div
                className="Sidebar-logo"
              />
              <SidebarNavItem
                href="/"
                icon="globe"
                text="Regions"
              >
                <Tip
                  className="Sidebar-navItem"
                  tip="Regions"
                >
                  <span
                    className="Tip Sidebar-navItem"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <Link
                      className="Sidebar-navItem-contents"
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to="/"
                    >
                      <a
                        className="Sidebar-navItem-contents"
                        onClick={[Function]}
                        style={Object {}}
                      >
                        <ItemContents
                          icon="globe"
                          text="Regions"
                        >
                          <span>
                            <Icon
                              type="globe"
                            >
                              <i
                                className="fa fa-globe fa-fw "
                              />
                            </Icon>
                            <span
                              className="Sidebar-navItem-text"
                            >
                               
                              Regions
                            </span>
                          </span>
                        </ItemContents>
                      </a>
                    </Link>
                  </span>
                </Tip>
              </SidebarNavItem>
              <div>
                <SidebarNavItem
                  active={null}
                  href="/regions/1/edit"
                  icon="map-o"
                  text="Region Settings"
                >
                  <Tip
                    className="Sidebar-navItem"
                    tip="Region Settings"
                  >
                    <span
                      className="Tip Sidebar-navItem"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <Link
                        className="Sidebar-navItem-contents"
                        onlyActiveOnIndex={false}
                        style={Object {}}
                        to="/regions/1/edit"
                      >
                        <a
                          className="Sidebar-navItem-contents"
                          onClick={[Function]}
                          style={Object {}}
                        >
                          <ItemContents
                            icon="map-o"
                            text="Region Settings"
                          >
                            <span>
                              <Icon
                                type="map-o"
                              >
                                <i
                                  className="fa fa-map-o fa-fw "
                                />
                              </Icon>
                              <span
                                className="Sidebar-navItem-text"
                              >
                                 
                                Region Settings
                              </span>
                            </span>
                          </ItemContents>
                        </a>
                      </Link>
                    </span>
                  </Tip>
                </SidebarNavItem>
                <SidebarNavItem
                  active={null}
                  href="/regions/1"
                  icon="cubes"
                  text="Projects"
                >
                  <Tip
                    className="Sidebar-navItem"
                    tip="Projects"
                  >
                    <span
                      className="Tip Sidebar-navItem"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <Link
                        className="Sidebar-navItem-contents"
                        onlyActiveOnIndex={false}
                        style={Object {}}
                        to="/regions/1"
                      >
                        <a
                          className="Sidebar-navItem-contents"
                          onClick={[Function]}
                          style={Object {}}
                        >
                          <ItemContents
                            icon="cubes"
                            text="Projects"
                          >
                            <span>
                              <Icon
                                type="cubes"
                              >
                                <i
                                  className="fa fa-cubes fa-fw "
                                />
                              </Icon>
                              <span
                                className="Sidebar-navItem-text"
                              >
                                 
                                Projects
                              </span>
                            </span>
                          </ItemContents>
                        </a>
                      </Link>
                    </span>
                  </Tip>
                </SidebarNavItem>
                <SidebarNavItem
                  active={null}
                  href="/regions/1/bundles"
                  icon="database"
                  text="GTFS Bundles"
                >
                  <Tip
                    className="Sidebar-navItem"
                    tip="GTFS Bundles"
                  >
                    <span
                      className="Tip Sidebar-navItem"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <Link
                        className="Sidebar-navItem-contents"
                        onlyActiveOnIndex={false}
                        style={Object {}}
                        to="/regions/1/bundles"
                      >
                        <a
                          className="Sidebar-navItem-contents"
                          onClick={[Function]}
                          style={Object {}}
                        >
                          <ItemContents
                            icon="database"
                            text="GTFS Bundles"
                          >
                            <span>
                              <Icon
                                type="database"
                              >
                                <i
                                  className="fa fa-database fa-fw "
                                />
                              </Icon>
                              <span
                                className="Sidebar-navItem-text"
                              >
                                 
                                GTFS Bundles
                              </span>
                            </span>
                          </ItemContents>
                        </a>
                      </Link>
                    </span>
                  </Tip>
                </SidebarNavItem>
                <SidebarNavItem
                  active={null}
                  href="/regions/1/opportunities"
                  icon="th"
                  text="Opportunity Datasets"
                >
                  <Tip
                    className="Sidebar-navItem"
                    tip="Opportunity Datasets"
                  >
                    <span
                      className="Tip Sidebar-navItem"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <Link
                        className="Sidebar-navItem-contents"
                        onlyActiveOnIndex={false}
                        style={Object {}}
                        to="/regions/1/opportunities"
                      >
                        <a
                          className="Sidebar-navItem-contents"
                          onClick={[Function]}
                          style={Object {}}
                        >
                          <ItemContents
                            icon="th"
                            text="Opportunity Datasets"
                          >
                            <span>
                              <Icon
                                type="th"
                              >
                                <i
                                  className="fa fa-th fa-fw "
                                />
                              </Icon>
                              <span
                                className="Sidebar-navItem-text"
                              >
                                 
                                Opportunity Datasets
                              </span>
                            </span>
                          </ItemContents>
                        </a>
                      </Link>
                    </span>
                  </Tip>
                </SidebarNavItem>
                <SidebarNavItem
                  active={null}
                  href="/regions/1/projects/1"
                  icon="pencil"
                  text="Edit Modifications"
                >
                  <Tip
                    className="Sidebar-navItem"
                    tip="Edit Modifications"
                  >
                    <span
                      className="Tip Sidebar-navItem"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <Link
                        className="Sidebar-navItem-contents"
                        onlyActiveOnIndex={false}
                        style={Object {}}
                        to="/regions/1/projects/1"
                      >
                        <a
                          className="Sidebar-navItem-contents"
                          onClick={[Function]}
                          style={Object {}}
                        >
                          <ItemContents
                            icon="pencil"
                            text="Edit Modifications"
                          >
                            <span>
                              <Icon
                                type="pencil"
                              >
                                <i
                                  className="fa fa-pencil fa-fw "
                                />
                              </Icon>
                              <span
                                className="Sidebar-navItem-text"
                              >
                                 
                                Edit Modifications
                              </span>
                            </span>
                          </ItemContents>
                        </a>
                      </Link>
                    </span>
                  </Tip>
                </SidebarNavItem>
                <SidebarNavItem
                  active={null}
                  href="/regions/1/analysis"
                  icon="area-chart"
                  text="Analyze"
                >
                  <Tip
                    className="Sidebar-navItem"
                    tip="Analyze"
                  >
                    <span
                      className="Tip Sidebar-navItem"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <Link
                        className="Sidebar-navItem-contents"
                        onlyActiveOnIndex={false}
                        style={Object {}}
                        to="/regions/1/analysis"
                      >
                        <a
                          className="Sidebar-navItem-contents"
                          onClick={[Function]}
                          style={Object {}}
                        >
                          <ItemContents
                            icon="area-chart"
                            text="Analyze"
                          >
                            <span>
                              <Icon
                                type="area-chart"
                              >
                                <i
                                  className="fa fa-area-chart fa-fw "
                                />
                              </Icon>
                              <span
                                className="Sidebar-navItem-text"
                              >
                                 
                                Analyze
                              </span>
                            </span>
                          </ItemContents>
                        </a>
                      </Link>
                    </span>
                  </Tip>
                </SidebarNavItem>
                <SidebarNavItem
                  active={null}
                  href="/regions/1/regional"
                  icon="server"
                  text="Regional Analysis"
                >
                  <Tip
                    className="Sidebar-navItem"
                    tip="Regional Analysis"
                  >
                    <span
                      className="Tip Sidebar-navItem"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <Link
                        className="Sidebar-navItem-contents"
                        onlyActiveOnIndex={false}
                        style={Object {}}
                        to="/regions/1/regional"
                      >
                        <a
                          className="Sidebar-navItem-contents"
                          onClick={[Function]}
                          style={Object {}}
                        >
                          <ItemContents
                            icon="server"
                            text="Regional Analysis"
                          >
                            <span>
                              <Icon
                                type="server"
                              >
                                <i
                                  className="fa fa-server fa-fw "
                                />
                              </Icon>
                              <span
                                className="Sidebar-navItem-text"
                              >
                                 
                                Regional Analysis
                              </span>
                            </span>
                          </ItemContents>
                        </a>
                      </Link>
                    </span>
                  </Tip>
                </SidebarNavItem>
              </div>
              <div
                className="Sidebar-bottom"
              >
                <SidebarNavItem
                  href="http://docs.analysis.conveyal.com/"
                  icon="question-circle"
                  text="Help and Documentation"
                >
                  <Tip
                    className="Sidebar-navItem"
                    tip="Help and Documentation"
                  >
                    <span
                      className="Tip Sidebar-navItem"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <a
                        className="Sidebar-navItem-contents"
                        href="http://docs.analysis.conveyal.com/"
                        target="_blank"
                      >
                        <ItemContents
                          icon="question-circle"
                          text="Help and Documentation"
                        >
                          <span>
                            <Icon
                              type="question-circle"
                            >
                              <i
                                className="fa fa-question-circle fa-fw "
                              />
                            </Icon>
                            <span
                              className="Sidebar-navItem-text"
                            >
                               
                              Help and Documentation
                            </span>
                          </span>
                        </ItemContents>
                      </a>
                    </span>
                  </Tip>
                </SidebarNavItem>
              </div>
            </div>
          </Sidebar>
        </Connect(Sidebar)>
        <Connect(ErrorModal)>
          <ErrorModal
            clearError={[Function]}
          >
            <span />
          </ErrorModal>
        </Connect(ErrorModal)>
        <div
          className="Fullscreen analysisMode"
        >
          <Connect(Map)
            onClick={[Function]}
          >
            <Map
              bounds={
                Object {
                  "_northEast": Object {
                    "lat": 37.365,
                    "lng": -121.924,
                  },
                  "_southWest": Object {
                    "lat": 36.9707,
                    "lng": -122.0279,
                  },
                }
              }
              center={
                Object {
                  "lat": 38.8886,
                  "lon": -77.043,
                }
              }
              dispatch={[Function]}
              maxBounds={
                Object {
                  "_northEast": Object {
                    "lat": 90,
                    "lng": 200,
                  },
                  "_southWest": Object {
                    "lat": -90,
                    "lng": -200,
                  },
                }
              }
              minZoom={2}
              onClick={[Function]}
              tileUrl="mock.url/tile"
              zIndex={-10}
              zoom={12}
            >
              <Map
                animate={false}
                bounds={
                  Object {
                    "_northEast": Object {
                      "lat": 37.365,
                      "lng": -121.924,
                    },
                    "_southWest": Object {
                      "lat": 36.9707,
                      "lng": -122.0279,
                    },
                  }
                }
                center={
                  Object {
                    "lat": 38.8886,
                    "lon": -77.043,
                  }
                }
                maxBounds={
                  Object {
                    "_northEast": Object {
                      "lat": 90,
                      "lng": 200,
                    },
                    "_southWest": Object {
                      "lat": -90,
                      "lng": -200,
                    },
                  }
                }
                minZoom={2}
                useFlyTo={false}
                zoom={12}
              >
                <div>
                  <TileLayer
                    attribution="<a href=\\"http://www.openstreetmap.org/copyright\\">OpenStreetMap</a> contributors, &copy; <a href='https://www.mapbox.com/about/maps/'>Mapbox</a>"
                    url="mock.url/tile"
                    zIndex={-10}
                  />
                  <Connect(GridualizerLayer)>
                    <GridualizerLayer
                      dispatch={[Function]}
                    />
                  </Connect(GridualizerLayer)>
                  <LabelLayer>
                    <TileLayer
                      url="https://api.mapbox.com/v4/mapbox.light/{z}/{x}/{y}.png?access_token=your-access-token"
                      zIndex={40}
                    />
                  </LabelLayer>
                  <Marker
                    draggable={true}
                    onDblclick={[Function]}
                    onDragEnd={[Function]}
                    position={
                      Object {
                        "lat": 12,
                        "lon": 34,
                      }
                    }
                  >
                    <g
                      data-props={
                        Object {
                          "draggable": true,
                          "onDblclick": [Function],
                          "onDragEnd": [Function],
                          "position": Object {
                            "lat": 12,
                            "lon": 34,
                          },
                        }
                      }
                      type="Marker"
                    />
                  </Marker>
                </div>
              </Map>
            </Map>
          </Connect(Map)>
        </div>
        <div
          className="ApplicationDock analysisMode"
        >
          <div
            className="ApplicationDockTitle"
          >
            <Icon
              type="area-chart"
            >
              <i
                className="fa fa-area-chart fa-fw "
              />
            </Icon>
             Analysis
            <Button
              className="pull-right"
              disabled={false}
              onClick={[Function]}
              style="primary"
            >
              <a
                className="btn btn-primary pull-right"
                disabled={false}
                href="#"
                onClick={[Function]}
                tabIndex={0}
              >
                <Icon
                  className=""
                  type="refresh"
                >
                  <i
                    className="fa fa-refresh fa-fw "
                  />
                </Icon>
                 
                Fetch results
              </a>
            </Button>
            <Button
              className="pad-right pull-right"
              disabled={false}
              onClick={[Function]}
              style="success"
            >
              <a
                className="btn btn-success pad-right pull-right"
                disabled={false}
                href="#"
                onClick={[Function]}
                tabIndex={0}
              >
                <Icon
                  type="plus"
                >
                  <i
                    className="fa fa-plus fa-fw "
                  />
                </Icon>
                New regional analysis
              </a>
            </Button>
          </div>
          <InnerDock>
            <div
              className="InnerDock "
              style={
                Object {
                  "height": 768,
                }
              }
            >
              <div
                className="block"
              >
                <div
                  className="row"
                >
                  <Group
                    className="col-xs-6"
                    label="Project"
                  >
                    <div
                      className="form-group col-xs-6"
                    >
                      <label
                        htmlFor="project-input-0"
                      >
                        Project
                      </label>
                      <Select
                        arrowRenderer={[Function]}
                        autosize={true}
                        backspaceRemoves={true}
                        backspaceToRemoveMessage="Press backspace to remove {label}"
                        clearAllText="Clear all"
                        clearRenderer={[Function]}
                        clearValueText="Clear value"
                        clearable={false}
                        closeOnSelect={true}
                        deleteRemoves={true}
                        delimiter=","
                        disabled={false}
                        escapeClearsValue={true}
                        filterOptions={[Function]}
                        ignoreAccents={true}
                        ignoreCase={true}
                        inputProps={Object {}}
                        isLoading={false}
                        joinValues={false}
                        labelKey="label"
                        matchPos="any"
                        matchProp="any"
                        menuBuffer={0}
                        menuRenderer={[Function]}
                        multi={false}
                        noResultsText="No results found"
                        onBlurResetsInput={true}
                        onChange={[Function]}
                        onCloseResetsInput={true}
                        onSelectResetsInput={true}
                        openOnClick={true}
                        optionComponent={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "Mock Project",
                              "value": "1",
                            },
                          ]
                        }
                        pageSize={5}
                        placeholder="Select..."
                        removeSelected={true}
                        required={false}
                        rtl={false}
                        scrollMenuIntoView={true}
                        searchable={true}
                        simpleValue={false}
                        tabSelectsValue={true}
                        trimFilter={true}
                        value="1"
                        valueComponent={[Function]}
                        valueKey="value"
                      >
                        <div
                          className="Select has-value is-searchable Select--single"
                        >
                          <div
                            className="Select-control"
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                          >
                            <span
                              className="Select-multi-value-wrapper"
                              id="react-select-2--value"
                            >
                              <Value
                                disabled={false}
                                id="react-select-2--value-item"
                                instancePrefix="react-select-2-"
                                onClick={null}
                                placeholder="Select..."
                                value={
                                  Object {
                                    "label": "Mock Project",
                                    "value": "1",
                                  }
                                }
                              >
                                <div
                                  className="Select-value"
                                >
                                  <span
                                    aria-selected="true"
                                    className="Select-value-label"
                                    id="react-select-2--value-item"
                                    role="option"
                                  >
                                    Mock Project
                                  </span>
                                </div>
                              </Value>
                              <AutosizeInput
                                aria-activedescendant="react-select-2--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                className="Select-input"
                                injectStyles={true}
                                minWidth="5"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                value=""
                              />
                            </span>
                            <span
                              className="Select-arrow-zone"
                              onMouseDown={[Function]}
                            >
                              <span
                                className="Select-arrow"
                                onMouseDown={[Function]}
                              />
                            </span>
                          </div>
                        </div>
                      </Select>
                    </div>
                  </Group>
                  <Group
                    className="col-xs-6"
                    label="Scenario"
                  >
                    <div
                      className="form-group col-xs-6"
                    >
                      <label
                        htmlFor="scenario-input-1"
                      >
                        Scenario
                      </label>
                      <Select
                        arrowRenderer={[Function]}
                        autosize={true}
                        backspaceRemoves={true}
                        backspaceToRemoveMessage="Press backspace to remove {label}"
                        clearAllText="Clear all"
                        clearRenderer={[Function]}
                        clearValueText="Clear value"
                        clearable={false}
                        closeOnSelect={true}
                        deleteRemoves={true}
                        delimiter=","
                        disabled={false}
                        escapeClearsValue={true}
                        filterOptions={[Function]}
                        ignoreAccents={true}
                        ignoreCase={true}
                        inputProps={Object {}}
                        isLoading={false}
                        joinValues={false}
                        labelKey="label"
                        matchPos="any"
                        matchProp="any"
                        menuBuffer={0}
                        menuRenderer={[Function]}
                        multi={false}
                        noResultsText="No results found"
                        onBlurResetsInput={true}
                        onChange={[Function]}
                        onCloseResetsInput={true}
                        onSelectResetsInput={true}
                        openOnClick={true}
                        optionComponent={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "Default",
                              "value": 0,
                            },
                          ]
                        }
                        pageSize={5}
                        placeholder="Select..."
                        removeSelected={true}
                        required={false}
                        rtl={false}
                        scrollMenuIntoView={true}
                        searchable={true}
                        simpleValue={false}
                        tabSelectsValue={true}
                        trimFilter={true}
                        value={0}
                        valueComponent={[Function]}
                        valueKey="value"
                      >
                        <div
                          className="Select has-value is-searchable Select--single"
                        >
                          <div
                            className="Select-control"
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                          >
                            <span
                              className="Select-multi-value-wrapper"
                              id="react-select-3--value"
                            >
                              <Value
                                disabled={false}
                                id="react-select-3--value-item"
                                instancePrefix="react-select-3-"
                                onClick={null}
                                placeholder="Select..."
                                value={
                                  Object {
                                    "label": "Default",
                                    "value": 0,
                                  }
                                }
                              >
                                <div
                                  className="Select-value"
                                >
                                  <span
                                    aria-selected="true"
                                    className="Select-value-label"
                                    id="react-select-3--value-item"
                                    role="option"
                                  >
                                    Default
                                  </span>
                                </div>
                              </Value>
                              <AutosizeInput
                                aria-activedescendant="react-select-3--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                className="Select-input"
                                injectStyles={true}
                                minWidth="5"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                value=""
                              />
                            </span>
                            <span
                              className="Select-arrow-zone"
                              onMouseDown={[Function]}
                            >
                              <span
                                className="Select-arrow"
                                onMouseDown={[Function]}
                              />
                            </span>
                          </div>
                        </div>
                      </Select>
                    </div>
                  </Group>
                </div>
                <div
                  className="row"
                >
                  <Group
                    className="col-xs-6"
                    label="Comparison Project"
                  >
                    <div
                      className="form-group col-xs-6"
                    >
                      <label
                        htmlFor="comparison-project-input-2"
                      >
                        Comparison Project
                      </label>
                      <Select
                        arrowRenderer={[Function]}
                        autosize={true}
                        backspaceRemoves={true}
                        backspaceToRemoveMessage="Press backspace to remove {label}"
                        clearAllText="Clear all"
                        clearRenderer={[Function]}
                        clearValueText="Clear value"
                        clearable={true}
                        closeOnSelect={true}
                        deleteRemoves={true}
                        delimiter=","
                        disabled={false}
                        escapeClearsValue={true}
                        filterOptions={[Function]}
                        ignoreAccents={true}
                        ignoreCase={true}
                        inputProps={Object {}}
                        isLoading={false}
                        joinValues={false}
                        labelKey="label"
                        matchPos="any"
                        matchProp="any"
                        menuBuffer={0}
                        menuRenderer={[Function]}
                        multi={false}
                        name="Project"
                        noResultsText="No results found"
                        onBlurResetsInput={true}
                        onChange={[Function]}
                        onCloseResetsInput={true}
                        onSelectResetsInput={true}
                        openOnClick={true}
                        optionComponent={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "Mock Project",
                              "value": "1",
                            },
                          ]
                        }
                        pageSize={5}
                        placeholder="Select comparison project…"
                        removeSelected={true}
                        required={false}
                        rtl={false}
                        scrollMenuIntoView={true}
                        searchable={true}
                        simpleValue={false}
                        tabSelectsValue={true}
                        trimFilter={true}
                        valueComponent={[Function]}
                        valueKey="value"
                      >
                        <div
                          className="Select is-clearable is-searchable Select--single"
                        >
                          <div
                            className="Select-control"
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                          >
                            <span
                              className="Select-multi-value-wrapper"
                              id="react-select-4--value"
                            >
                              <div
                                className="Select-placeholder"
                              >
                                Select comparison project…
                              </div>
                              <AutosizeInput
                                aria-activedescendant="react-select-4--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                className="Select-input"
                                injectStyles={true}
                                minWidth="5"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                value=""
                              />
                            </span>
                            <span
                              className="Select-arrow-zone"
                              onMouseDown={[Function]}
                            >
                              <span
                                className="Select-arrow"
                                onMouseDown={[Function]}
                              />
                            </span>
                          </div>
                        </div>
                      </Select>
                    </div>
                  </Group>
                  <Group
                    className="col-xs-6"
                    label="Comparison Scenario"
                  >
                    <div
                      className="form-group col-xs-6"
                    >
                      <label
                        htmlFor="comparison-scenario-input-3"
                      >
                        Comparison Scenario
                      </label>
                      <Select
                        arrowRenderer={[Function]}
                        autosize={true}
                        backspaceRemoves={true}
                        backspaceToRemoveMessage="Press backspace to remove {label}"
                        clearAllText="Clear all"
                        clearRenderer={[Function]}
                        clearValueText="Clear value"
                        clearable={false}
                        closeOnSelect={true}
                        deleteRemoves={true}
                        delimiter=","
                        disabled={true}
                        escapeClearsValue={true}
                        filterOptions={[Function]}
                        ignoreAccents={true}
                        ignoreCase={true}
                        inputProps={Object {}}
                        isLoading={false}
                        joinValues={false}
                        labelKey="label"
                        matchPos="any"
                        matchProp="any"
                        menuBuffer={0}
                        menuRenderer={[Function]}
                        multi={false}
                        name="Scenario"
                        noResultsText="No results found"
                        onBlurResetsInput={true}
                        onChange={[Function]}
                        onCloseResetsInput={true}
                        onSelectResetsInput={true}
                        openOnClick={true}
                        optionComponent={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "Baseline",
                              "value": -1,
                            },
                          ]
                        }
                        pageSize={5}
                        placeholder="Select comparison scenario…"
                        removeSelected={true}
                        required={false}
                        rtl={false}
                        scrollMenuIntoView={true}
                        searchable={true}
                        simpleValue={false}
                        tabSelectsValue={true}
                        trimFilter={true}
                        valueComponent={[Function]}
                        valueKey="value"
                      >
                        <div
                          className="Select is-disabled is-searchable Select--single"
                        >
                          <div
                            className="Select-control"
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                          >
                            <span
                              className="Select-multi-value-wrapper"
                              id="react-select-5--value"
                            >
                              <div
                                className="Select-placeholder"
                              >
                                Select comparison scenario…
                              </div>
                              <div
                                aria-activedescendant="react-select-5--value"
                                aria-disabled="true"
                                aria-expanded={false}
                                aria-owns=""
                                className="Select-input"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                role="combobox"
                                style={
                                  Object {
                                    "border": 0,
                                    "display": "inline-block",
                                    "width": 1,
                                  }
                                }
                                tabIndex={0}
                              />
                            </span>
                            <span
                              className="Select-arrow-zone"
                              onMouseDown={[Function]}
                            >
                              <span
                                className="Select-arrow"
                                onMouseDown={[Function]}
                              />
                            </span>
                          </div>
                        </div>
                      </Select>
                    </div>
                  </Group>
                </div>
                <div
                  className="row"
                >
                  <Group
                    className="col-xs-12"
                    label="Opportunity Dataset"
                  >
                    <div
                      className="form-group col-xs-12"
                    >
                      <label
                        htmlFor="opportunity-dataset-input-4"
                      >
                        Opportunity Dataset
                      </label>
                      <Connect(OpportunityDatasetSelector)>
                        <OpportunityDatasetSelector
                          load={[Function]}
                          opportunitiesUrl="/regions/1/opportunities"
                          opportunityDatasets={
                            Array [
                              Object {
                                "_id": "Workers_total",
                                "name": "Workers total",
                                "sourceName": "lodes-data-2014",
                              },
                            ]
                          }
                          uploadStatuses={Array []}
                        >
                          <Select
                            arrowRenderer={[Function]}
                            autosize={true}
                            backspaceRemoves={true}
                            backspaceToRemoveMessage="Press backspace to remove {label}"
                            clearAllText="Clear all"
                            clearRenderer={[Function]}
                            clearValueText="Clear value"
                            clearable={false}
                            closeOnSelect={true}
                            deleteRemoves={true}
                            delimiter=","
                            disabled={false}
                            escapeClearsValue={true}
                            filterOptions={[Function]}
                            ignoreAccents={true}
                            ignoreCase={true}
                            inputProps={Object {}}
                            isLoading={false}
                            joinValues={false}
                            labelKey="label"
                            matchPos="any"
                            matchProp="any"
                            menuBuffer={0}
                            menuRenderer={[Function]}
                            multi={false}
                            noResultsText="No results found"
                            onBlurResetsInput={true}
                            onChange={[Function]}
                            onCloseResetsInput={true}
                            onSelectResetsInput={true}
                            openOnClick={true}
                            optionComponent={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "lodes-data-2014: Workers total",
                                  "value": "Workers_total",
                                },
                              ]
                            }
                            pageSize={5}
                            placeholder="Select..."
                            removeSelected={true}
                            required={false}
                            rtl={false}
                            scrollMenuIntoView={true}
                            searchable={true}
                            simpleValue={false}
                            tabSelectsValue={true}
                            trimFilter={true}
                            valueComponent={[Function]}
                            valueKey="value"
                          >
                            <div
                              className="Select is-searchable Select--single"
                            >
                              <div
                                className="Select-control"
                                onKeyDown={[Function]}
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                              >
                                <span
                                  className="Select-multi-value-wrapper"
                                  id="react-select-6--value"
                                >
                                  <div
                                    className="Select-placeholder"
                                  >
                                    Select...
                                  </div>
                                  <AutosizeInput
                                    aria-activedescendant="react-select-6--value"
                                    aria-expanded="false"
                                    aria-haspopup="false"
                                    aria-owns=""
                                    className="Select-input"
                                    injectStyles={true}
                                    minWidth="5"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    role="combobox"
                                    value=""
                                  />
                                </span>
                                <span
                                  className="Select-arrow-zone"
                                  onMouseDown={[Function]}
                                >
                                  <span
                                    className="Select-arrow"
                                    onMouseDown={[Function]}
                                  />
                                </span>
                              </div>
                            </div>
                          </Select>
                        </OpportunityDatasetSelector>
                      </Connect(OpportunityDatasetSelector)>
                    </div>
                  </Group>
                </div>
                <Connect(StackedPercentileSelector)>
                  <StackedPercentileSelector
                    accessibility={null}
                    comparisonAccessibility={null}
                    comparisonInProgress={false}
                    comparisonPercentileCurves={null}
                    comparisonProjectName={null}
                    isFetchingIsochrone={false}
                    isochroneCutoff={60}
                    maxAccessibility={-Infinity}
                    projectName="Mock Project: Default"
                    setIsochroneCutoff={[Function]}
                  >
                    <div>
                      <h5>
                        Aggregate accessibility to
                         
                        <strong>
                          [select opportunity dataset]
                        </strong>
                         
                        within
                         
                        <strong>
                          60
                        </strong>
                         
                        minutes
                      </h5>
                      <input
                        className="form-control"
                        max={120}
                        min={1}
                        onChange={[Function]}
                        style={
                          Object {
                            "boxShadow": "none",
                            "left": 46,
                            "position": "relative",
                            "width": 568,
                          }
                        }
                        title="Travel time cutoff (minutes)"
                        type="range"
                        value={60}
                      />
                    </div>
                  </StackedPercentileSelector>
                </Connect(StackedPercentileSelector)>
              </div>
              <div
                className="block"
              >
                <Group
                  justified={true}
                >
                  <div
                    className="btn-group btn-group-justified"
                  >
                    <Button
                      disabled={true}
                      onClick={[Function]}
                      style="info"
                    >
                      <a
                        className="btn btn-info"
                        disabled={true}
                        href="#"
                        onClick={[Function]}
                        tabIndex={0}
                      >
                        <Icon
                          type="download"
                        >
                          <i
                            className="fa fa-download fa-fw "
                          />
                        </Icon>
                         Isochrone as GeoJSON
                      </a>
                    </Button>
                    <Button
                      disabled={true}
                      onClick={[Function]}
                      style="info"
                    >
                      <a
                        className="btn btn-info"
                        disabled={true}
                        href="#"
                        onClick={[Function]}
                        tabIndex={0}
                      >
                        <Icon
                          type="download"
                        >
                          <i
                            className="fa fa-download fa-fw "
                          />
                        </Icon>
                         Comparison Isochrone as GeoJSON
                      </a>
                    </Button>
                  </div>
                </Group>
                <Group
                  justified={true}
                >
                  <div
                    className="btn-group btn-group-justified"
                  >
                    <Button
                      onClick={[Function]}
                      style="info"
                    >
                      <a
                        className="btn btn-info"
                        href="#"
                        onClick={[Function]}
                        tabIndex={0}
                      >
                        <Icon
                          type="globe"
                        >
                          <i
                            className="fa fa-globe fa-fw "
                          />
                        </Icon>
                         Generate & Download GeoTIFFs
                      </a>
                    </Button>
                  </div>
                </Group>
                <Connect(BookmarkChooser)>
                  <BookmarkChooser
                    bookmarkData={
                      Object {
                        "opportunityDataset": undefined,
                        "profileRequest": Object {
                          "accessModes": "WALK",
                          "bikeSafe": 1,
                          "bikeSlope": 1,
                          "bikeSpeed": 4.166666666666667,
                          "bikeTime": 1,
                          "bounds": Object {
                            "east": -76,
                            "north": 39,
                            "south": 38,
                            "west": -77,
                          },
                          "bundleId": "1",
                          "date": "2016-01-16",
                          "defaultExpanded": true,
                          "directModes": "WALK",
                          "egressModes": "WALK",
                          "fromLat": 12,
                          "fromLon": 34,
                          "fromTime": 25200,
                          "maxBikeTime": 20,
                          "maxRides": 4,
                          "maxTripDurationMinutes": 60,
                          "maxWalkTime": 20,
                          "monteCarloDraws": 200,
                          "name": "Profile Request Test",
                          "projectId": "1",
                          "reachabilityThreshold": 0,
                          "regionId": "1",
                          "toTime": 32400,
                          "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                          "travelTimePercentile": 50,
                          "variantIndex": 0,
                          "walkSpeed": 1.3888888888888888,
                          "workerVersion": "v4.0.0",
                        },
                        "regionId": "1",
                      }
                    }
                    createBookmark={[Function]}
                    disabled={false}
                    fetchTravelTimeSurface={[Function]}
                    selectBookmark={[Function]}
                  >
                    <Group
                      label="Bookmark"
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="bookmark-input-5"
                        >
                          Bookmark
                        </label>
                        <div
                          className="row"
                        >
                          <div
                            className="col-xs-6"
                          >
                            <Select
                              arrowRenderer={[Function]}
                              autosize={true}
                              backspaceRemoves={true}
                              backspaceToRemoveMessage="Press backspace to remove {label}"
                              clearAllText="Clear all"
                              clearRenderer={[Function]}
                              clearValueText="Clear value"
                              clearable={false}
                              closeOnSelect={true}
                              deleteRemoves={true}
                              delimiter=","
                              disabled={false}
                              escapeClearsValue={true}
                              filterOptions={[Function]}
                              ignoreAccents={true}
                              ignoreCase={true}
                              inputProps={Object {}}
                              isLoading={false}
                              joinValues={false}
                              labelKey="label"
                              matchPos="any"
                              matchProp="any"
                              menuBuffer={0}
                              menuRenderer={[Function]}
                              multi={false}
                              noResultsText="No results found"
                              onBlurResetsInput={true}
                              onChange={[Function]}
                              onCloseResetsInput={true}
                              onSelectResetsInput={true}
                              openOnClick={true}
                              optionComponent={[Function]}
                              options={Array []}
                              pageSize={5}
                              placeholder="Select..."
                              removeSelected={true}
                              required={false}
                              rtl={false}
                              scrollMenuIntoView={true}
                              searchable={true}
                              simpleValue={false}
                              tabSelectsValue={true}
                              trimFilter={true}
                              valueComponent={[Function]}
                              valueKey="value"
                            >
                              <div
                                className="Select is-searchable Select--single"
                              >
                                <div
                                  className="Select-control"
                                  onKeyDown={[Function]}
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                >
                                  <span
                                    className="Select-multi-value-wrapper"
                                    id="react-select-7--value"
                                  >
                                    <div
                                      className="Select-placeholder"
                                    >
                                      Select...
                                    </div>
                                    <AutosizeInput
                                      aria-activedescendant="react-select-7--value"
                                      aria-expanded="false"
                                      aria-haspopup="false"
                                      aria-owns=""
                                      className="Select-input"
                                      injectStyles={true}
                                      minWidth="5"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      required={false}
                                      role="combobox"
                                      value=""
                                    />
                                  </span>
                                  <span
                                    className="Select-arrow-zone"
                                    onMouseDown={[Function]}
                                  >
                                    <span
                                      className="Select-arrow"
                                      onMouseDown={[Function]}
                                    />
                                  </span>
                                </div>
                              </div>
                            </Select>
                          </div>
                          <div
                            className="col-xs-6"
                          >
                            <Button
                              block={true}
                              disabled={false}
                              onClick={[Function]}
                              style="success"
                            >
                              <a
                                className="btn btn-success btn-block"
                                disabled={false}
                                href="#"
                                onClick={[Function]}
                                tabIndex={0}
                              >
                                <Icon
                                  type="plus"
                                >
                                  <i
                                    className="fa fa-plus fa-fw "
                                  />
                                </Icon>
                                 
                                Create bookmark
                              </a>
                            </Button>
                          </div>
                        </div>
                      </div>
                    </Group>
                  </BookmarkChooser>
                </Connect(BookmarkChooser)>
                <ProfileRequestEditor
                  disabled={false}
                  profileRequest={
                    Object {
                      "accessModes": "WALK",
                      "bikeSafe": 1,
                      "bikeSlope": 1,
                      "bikeSpeed": 4.166666666666667,
                      "bikeTime": 1,
                      "bounds": Object {
                        "east": -76,
                        "north": 39,
                        "south": 38,
                        "west": -77,
                      },
                      "bundleId": "1",
                      "date": "2016-01-16",
                      "defaultExpanded": true,
                      "directModes": "WALK",
                      "egressModes": "WALK",
                      "fromLat": 12,
                      "fromLon": 34,
                      "fromTime": 25200,
                      "maxBikeTime": 20,
                      "maxRides": 4,
                      "maxTripDurationMinutes": 60,
                      "maxWalkTime": 20,
                      "monteCarloDraws": 200,
                      "name": "Profile Request Test",
                      "projectId": "1",
                      "reachabilityThreshold": 0,
                      "regionId": "1",
                      "toTime": 32400,
                      "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                      "travelTimePercentile": 50,
                      "variantIndex": 0,
                      "walkSpeed": 1.3888888888888888,
                      "workerVersion": "v4.0.0",
                    }
                  }
                  setProfileRequest={[Function]}
                >
                  <div>
                    <ModeSelector
                      accessModes="WALK"
                      directModes="WALK"
                      disabled={false}
                      transitModes="BUS,TRAM,RAIL,SUBWAY"
                      update={[Function]}
                    >
                      <div
                        className="row"
                      >
                        <Group
                          className="col-xs-6"
                          label="Access modes"
                        >
                          <div
                            className="form-group col-xs-6"
                          >
                            <label
                              htmlFor="access-modes-input-6"
                            >
                              Access modes
                            </label>
                            <Group
                              disabled={false}
                              justified={true}
                            >
                              <div
                                className="btn-group btn-group-justified"
                                disabled={false}
                              >
                                <Button
                                  active={true}
                                  onClick={[Function]}
                                  title="Walk"
                                >
                                  <a
                                    className="btn btn-default active"
                                    href="#"
                                    onClick={[Function]}
                                    tabIndex={0}
                                    title="Walk"
                                  >
                                    <Icon
                                      type="male"
                                    >
                                      <i
                                        className="fa fa-male fa-fw "
                                      />
                                    </Icon>
                                  </a>
                                </Button>
                                <Button
                                  active={false}
                                  onClick={[Function]}
                                  title="Bike"
                                >
                                  <a
                                    className="btn btn-default"
                                    href="#"
                                    onClick={[Function]}
                                    tabIndex={0}
                                    title="Bike"
                                  >
                                    <Icon
                                      type="bicycle"
                                    >
                                      <i
                                        className="fa fa-bicycle fa-fw "
                                      />
                                    </Icon>
                                  </a>
                                </Button>
                                <Button
                                  active={false}
                                  onClick={[Function]}
                                  title="Automobile (kiss-and-ride)"
                                >
                                  <a
                                    className="btn btn-default"
                                    href="#"
                                    onClick={[Function]}
                                    tabIndex={0}
                                    title="Automobile (kiss-and-ride)"
                                  >
                                    <Icon
                                      type="car"
                                    >
                                      <i
                                        className="fa fa-car fa-fw "
                                      />
                                    </Icon>
                                  </a>
                                </Button>
                                <Button
                                  active={false}
                                  onClick={[Function]}
                                  title="Automobile (park-and-ride)"
                                >
                                  <a
                                    className="btn btn-default"
                                    href="#"
                                    onClick={[Function]}
                                    tabIndex={0}
                                    title="Automobile (park-and-ride)"
                                  >
                                    <strong>
                                      P
                                    </strong>
                                  </a>
                                </Button>
                              </div>
                            </Group>
                          </div>
                        </Group>
                        <Group
                          className="col-xs-6"
                          label="Transit modes"
                        >
                          <div
                            className="form-group col-xs-6"
                          >
                            <label
                              htmlFor="transit-modes-input-7"
                            >
                              Transit modes
                            </label>
                            <Group
                              disabled={false}
                              justified={true}
                            >
                              <div
                                className="btn-group btn-group-justified"
                                disabled={false}
                              >
                                <Button
                                  active={true}
                                  onClick={[Function]}
                                  title="Bus"
                                >
                                  <a
                                    className="btn btn-default active"
                                    href="#"
                                    onClick={[Function]}
                                    tabIndex={0}
                                    title="Bus"
                                  >
                                    <Icon
                                      type="bus"
                                    >
                                      <i
                                        className="fa fa-bus fa-fw "
                                      />
                                    </Icon>
                                  </a>
                                </Button>
                                <Button
                                  active={true}
                                  onClick={[Function]}
                                  title="Tram"
                                >
                                  <a
                                    className="btn btn-default active"
                                    href="#"
                                    onClick={[Function]}
                                    tabIndex={0}
                                    title="Tram"
                                  >
                                    Tram
                                  </a>
                                </Button>
                                <Button
                                  active={true}
                                  onClick={[Function]}
                                  title="Subway"
                                >
                                  <a
                                    className="btn btn-default active"
                                    href="#"
                                    onClick={[Function]}
                                    tabIndex={0}
                                    title="Subway"
                                  >
                                    <Icon
                                      type="subway"
                                    >
                                      <i
                                        className="fa fa-subway fa-fw "
                                      />
                                    </Icon>
                                  </a>
                                </Button>
                                <Button
                                  active={true}
                                  onClick={[Function]}
                                  title="Rail"
                                >
                                  <a
                                    className="btn btn-default active"
                                    href="#"
                                    onClick={[Function]}
                                    tabIndex={0}
                                    title="Rail"
                                  >
                                    <Icon
                                      type="train"
                                    >
                                      <i
                                        className="fa fa-train fa-fw "
                                      />
                                    </Icon>
                                  </a>
                                </Button>
                              </div>
                            </Group>
                          </div>
                        </Group>
                      </div>
                    </ModeSelector>
                    <div
                      className="row"
                    >
                      <div
                        className="form-group col-xs-4"
                      >
                        <label
                          htmlFor="Date"
                        >
                          Date
                        </label>
                        <DatePicker
                          disabled={false}
                          onChange={[Function]}
                          value="2016-01-16"
                        >
                          <Component
                            className=""
                            closeOnSelect={false}
                            closeOnTab={true}
                            dateFormat={true}
                            defaultValue=""
                            disabled={false}
                            input={true}
                            inputProps={
                              Object {
                                "id": "date-picker-1",
                              }
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onViewModeChange={[Function]}
                            strictParsing={true}
                            timeConstraints={Object {}}
                            timeFormat={false}
                            type="date"
                            utc={true}
                            value={2016-01-16T00:00:00.000Z}
                          >
                            <div
                              className="rdt"
                            >
                              <input
                                className="form-control"
                                id="date-picker-1"
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                type="text"
                                value="01/16/2016"
                              />
                              <div
                                className="rdtPicker"
                              >
                                <Component
                                  onClickOutside={[Function]}
                                  view="days"
                                  viewProps={
                                    Object {
                                      "addTime": [Function],
                                      "dateFormat": "MM/DD/YYYY",
                                      "handleClickOutside": [Function],
                                      "isValidDate": undefined,
                                      "localMoment": [Function],
                                      "renderDay": undefined,
                                      "renderMonth": undefined,
                                      "renderYear": undefined,
                                      "selectedDate": "2016-01-16T00:00:00.000Z",
                                      "setDate": [Function],
                                      "setTime": [Function],
                                      "showView": [Function],
                                      "subtractTime": [Function],
                                      "timeConstraints": Object {},
                                      "timeFormat": "",
                                      "updateOn": "days",
                                      "updateSelectedDate": [Function],
                                      "value": 2016-01-16T00:00:00.000Z,
                                      "viewDate": "2016-01-01T00:00:00.000Z",
                                    }
                                  }
                                >
                                  <OnClickOutside(Component)
                                    addTime={[Function]}
                                    dateFormat="MM/DD/YYYY"
                                    handleClickOutside={[Function]}
                                    localMoment={[Function]}
                                    selectedDate={"2016-01-16T00:00:00.000Z"}
                                    setDate={[Function]}
                                    setTime={[Function]}
                                    showView={[Function]}
                                    subtractTime={[Function]}
                                    timeConstraints={Object {}}
                                    timeFormat=""
                                    updateOn="days"
                                    updateSelectedDate={[Function]}
                                    value={2016-01-16T00:00:00.000Z}
                                    viewDate={"2016-01-01T00:00:00.000Z"}
                                  >
                                    <Component
                                      addTime={[Function]}
                                      dateFormat="MM/DD/YYYY"
                                      disableOnClickOutside={[Function]}
                                      enableOnClickOutside={[Function]}
                                      handleClickOutside={[Function]}
                                      localMoment={[Function]}
                                      selectedDate={"2016-01-16T00:00:00.000Z"}
                                      setDate={[Function]}
                                      setTime={[Function]}
                                      showView={[Function]}
                                      subtractTime={[Function]}
                                      timeConstraints={Object {}}
                                      timeFormat=""
                                      updateOn="days"
                                      updateSelectedDate={[Function]}
                                      value={2016-01-16T00:00:00.000Z}
                                      viewDate={"2016-01-01T00:00:00.000Z"}
                                    >
                                      <div
                                        className="rdtDays"
                                      >
                                        <table>
                                          <thead>
                                            <tr>
                                              <th
                                                className="rdtPrev"
                                                onClick={[Function]}
                                              >
                                                <span>
                                                  ‹
                                                </span>
                                              </th>
                                              <th
                                                className="rdtSwitch"
                                                colSpan={5}
                                                data-value={0}
                                                onClick={[Function]}
                                              >
                                                January 2016
                                              </th>
                                              <th
                                                className="rdtNext"
                                                onClick={[Function]}
                                              >
                                                <span>
                                                  ›
                                                </span>
                                              </th>
                                            </tr>
                                            <tr>
                                              <th
                                                className="dow"
                                              >
                                                Su
                                              </th>
                                              <th
                                                className="dow"
                                              >
                                                Mo
                                              </th>
                                              <th
                                                className="dow"
                                              >
                                                Tu
                                              </th>
                                              <th
                                                className="dow"
                                              >
                                                We
                                              </th>
                                              <th
                                                className="dow"
                                              >
                                                Th
                                              </th>
                                              <th
                                                className="dow"
                                              >
                                                Fr
                                              </th>
                                              <th
                                                className="dow"
                                              >
                                                Sa
                                              </th>
                                            </tr>
                                          </thead>
                                          <tbody>
                                            <tr>
                                              <td
                                                className="rdtDay rdtOld"
                                                data-value={27}
                                                onClick={[Function]}
                                              >
                                                27
                                              </td>
                                              <td
                                                className="rdtDay rdtOld"
                                                data-value={28}
                                                onClick={[Function]}
                                              >
                                                28
                                              </td>
                                              <td
                                                className="rdtDay rdtOld"
                                                data-value={29}
                                                onClick={[Function]}
                                              >
                                                29
                                              </td>
                                              <td
                                                className="rdtDay rdtOld"
                                                data-value={30}
                                                onClick={[Function]}
                                              >
                                                30
                                              </td>
                                              <td
                                                className="rdtDay rdtOld"
                                                data-value={31}
                                                onClick={[Function]}
                                              >
                                                31
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={1}
                                                onClick={[Function]}
                                              >
                                                1
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={2}
                                                onClick={[Function]}
                                              >
                                                2
                                              </td>
                                            </tr>
                                            <tr>
                                              <td
                                                className="rdtDay"
                                                data-value={3}
                                                onClick={[Function]}
                                              >
                                                3
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={4}
                                                onClick={[Function]}
                                              >
                                                4
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={5}
                                                onClick={[Function]}
                                              >
                                                5
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={6}
                                                onClick={[Function]}
                                              >
                                                6
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={7}
                                                onClick={[Function]}
                                              >
                                                7
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={8}
                                                onClick={[Function]}
                                              >
                                                8
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={9}
                                                onClick={[Function]}
                                              >
                                                9
                                              </td>
                                            </tr>
                                            <tr>
                                              <td
                                                className="rdtDay"
                                                data-value={10}
                                                onClick={[Function]}
                                              >
                                                10
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={11}
                                                onClick={[Function]}
                                              >
                                                11
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={12}
                                                onClick={[Function]}
                                              >
                                                12
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={13}
                                                onClick={[Function]}
                                              >
                                                13
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={14}
                                                onClick={[Function]}
                                              >
                                                14
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={15}
                                                onClick={[Function]}
                                              >
                                                15
                                              </td>
                                              <td
                                                className="rdtDay rdtActive"
                                                data-value={16}
                                                onClick={[Function]}
                                              >
                                                16
                                              </td>
                                            </tr>
                                            <tr>
                                              <td
                                                className="rdtDay"
                                                data-value={17}
                                                onClick={[Function]}
                                              >
                                                17
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={18}
                                                onClick={[Function]}
                                              >
                                                18
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={19}
                                                onClick={[Function]}
                                              >
                                                19
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={20}
                                                onClick={[Function]}
                                              >
                                                20
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={21}
                                                onClick={[Function]}
                                              >
                                                21
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={22}
                                                onClick={[Function]}
                                              >
                                                22
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={23}
                                                onClick={[Function]}
                                              >
                                                23
                                              </td>
                                            </tr>
                                            <tr>
                                              <td
                                                className="rdtDay"
                                                data-value={24}
                                                onClick={[Function]}
                                              >
                                                24
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={25}
                                                onClick={[Function]}
                                              >
                                                25
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={26}
                                                onClick={[Function]}
                                              >
                                                26
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={27}
                                                onClick={[Function]}
                                              >
                                                27
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={28}
                                                onClick={[Function]}
                                              >
                                                28
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={29}
                                                onClick={[Function]}
                                              >
                                                29
                                              </td>
                                              <td
                                                className="rdtDay"
                                                data-value={30}
                                                onClick={[Function]}
                                              >
                                                30
                                              </td>
                                            </tr>
                                            <tr>
                                              <td
                                                className="rdtDay"
                                                data-value={31}
                                                onClick={[Function]}
                                              >
                                                31
                                              </td>
                                              <td
                                                className="rdtDay rdtNew"
                                                data-value={1}
                                                onClick={[Function]}
                                              >
                                                1
                                              </td>
                                              <td
                                                className="rdtDay rdtNew"
                                                data-value={2}
                                                onClick={[Function]}
                                              >
                                                2
                                              </td>
                                              <td
                                                className="rdtDay rdtNew"
                                                data-value={3}
                                                onClick={[Function]}
                                              >
                                                3
                                              </td>
                                              <td
                                                className="rdtDay rdtNew"
                                                data-value={4}
                                                onClick={[Function]}
                                              >
                                                4
                                              </td>
                                              <td
                                                className="rdtDay rdtNew"
                                                data-value={5}
                                                onClick={[Function]}
                                              >
                                                5
                                              </td>
                                              <td
                                                className="rdtDay rdtNew"
                                                data-value={6}
                                                onClick={[Function]}
                                              >
                                                6
                                              </td>
                                            </tr>
                                          </tbody>
                                        </table>
                                      </div>
                                    </Component>
                                  </OnClickOutside(Component)>
                                </Component>
                              </div>
                            </div>
                          </Component>
                        </DatePicker>
                      </div>
                      <div
                        className="col-xs-4"
                      >
                        <TimePicker
                          disabled={false}
                          label="From time"
                          name="fromTime"
                          onChange={[Function]}
                          value={25200}
                        >
                          <Text
                            disabled={false}
                            label="From time"
                            name="fromTime"
                            onChange={[Function]}
                            onWheel={[Function]}
                            type="time"
                            units="hh:mm"
                            value="07:00"
                          >
                            <Group
                              disabled={false}
                              id="from-time-input-8"
                              label="From time"
                              name="fromTime"
                              onChange={[Function]}
                              onWheel={[Function]}
                              type="time"
                              units="hh:mm"
                              value="07:00"
                            >
                              <div
                                className="form-group"
                              >
                                <label
                                  htmlFor="from-time-input-8"
                                >
                                  From time
                                </label>
                                <Input
                                  disabled={false}
                                  id="from-time-input-8"
                                  label="From time"
                                  name="fromTime"
                                  onChange={[Function]}
                                  onWheel={[Function]}
                                  type="time"
                                  units="hh:mm"
                                  value="07:00"
                                >
                                  <div
                                    className="InputWithUnits"
                                  >
                                    <input
                                      className="form-control"
                                      disabled={false}
                                      id="from-time-input-8"
                                      name="fromTime"
                                      onChange={[Function]}
                                      onWheel={[Function]}
                                      placeholder="hh:mm"
                                      type="time"
                                      value="07:00"
                                    />
                                    <span
                                      className="InputUnits"
                                    >
                                      hh:mm
                                    </span>
                                  </div>
                                </Input>
                              </div>
                            </Group>
                          </Text>
                        </TimePicker>
                      </div>
                      <div
                        className="col-xs-4"
                      >
                        <TimePicker
                          disabled={false}
                          label="To time"
                          name="toTime"
                          onChange={[Function]}
                          value={32400}
                        >
                          <Text
                            disabled={false}
                            label="To time"
                            name="toTime"
                            onChange={[Function]}
                            onWheel={[Function]}
                            type="time"
                            units="hh:mm"
                            value="09:00"
                          >
                            <Group
                              disabled={false}
                              id="to-time-input-9"
                              label="To time"
                              name="toTime"
                              onChange={[Function]}
                              onWheel={[Function]}
                              type="time"
                              units="hh:mm"
                              value="09:00"
                            >
                              <div
                                className="form-group"
                              >
                                <label
                                  htmlFor="to-time-input-9"
                                >
                                  To time
                                </label>
                                <Input
                                  disabled={false}
                                  id="to-time-input-9"
                                  label="To time"
                                  name="toTime"
                                  onChange={[Function]}
                                  onWheel={[Function]}
                                  type="time"
                                  units="hh:mm"
                                  value="09:00"
                                >
                                  <div
                                    className="InputWithUnits"
                                  >
                                    <input
                                      className="form-control"
                                      disabled={false}
                                      id="to-time-input-9"
                                      name="toTime"
                                      onChange={[Function]}
                                      onWheel={[Function]}
                                      placeholder="hh:mm"
                                      type="time"
                                      value="09:00"
                                    />
                                    <span
                                      className="InputUnits"
                                    >
                                      hh:mm
                                    </span>
                                  </div>
                                </Input>
                              </div>
                            </Group>
                          </Text>
                        </TimePicker>
                      </div>
                    </div>
                    <div
                      className="row"
                    >
                      <div
                        className="col-xs-12"
                      >
                        <Connect(SelectR5Version)>
                          <SelectR5Version
                            allValidVersions={Array []}
                            currentR5Version="v4.0.0"
                            loadR5Versions={[Function]}
                            localState={
                              Object {
                                "analysisVersion": undefined,
                                "currentVersion": "v4.0.0",
                                "versions": Array [],
                              }
                            }
                            newerVersionIsAvailable={false}
                            releaseVersions={Array []}
                            setCurrentR5Version={[Function]}
                            versions={Array []}
                          >
                            <div>
                              <Group
                                label="Routing engine"
                              >
                                <div
                                  className="form-group"
                                >
                                  <label
                                    htmlFor="routing-engine-input-10"
                                  >
                                    Routing engine
                                  </label>
                                  <Icon
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "color": "#aaa",
                                        "cursor": "pointer",
                                      }
                                    }
                                    title="Show all routing engine versions (advanced)"
                                    type="flask"
                                  >
                                    <i
                                      className="fa fa-flask fa-fw "
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "color": "#aaa",
                                          "cursor": "pointer",
                                        }
                                      }
                                      title="Show all routing engine versions (advanced)"
                                    />
                                  </Icon>
                                  <Select
                                    arrowRenderer={[Function]}
                                    autosize={true}
                                    backspaceRemoves={true}
                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                    clearAllText="Clear all"
                                    clearRenderer={[Function]}
                                    clearValueText="Clear value"
                                    clearable={false}
                                    closeOnSelect={true}
                                    deleteRemoves={true}
                                    delimiter=","
                                    disabled={false}
                                    escapeClearsValue={true}
                                    filterOptions={[Function]}
                                    ignoreAccents={true}
                                    ignoreCase={true}
                                    inputProps={Object {}}
                                    isLoading={false}
                                    joinValues={false}
                                    labelKey="label"
                                    matchPos="any"
                                    matchProp="any"
                                    menuBuffer={0}
                                    menuRenderer={[Function]}
                                    multi={false}
                                    noResultsText="No results found"
                                    onBlurResetsInput={true}
                                    onChange={[Function]}
                                    onCloseResetsInput={true}
                                    onSelectResetsInput={true}
                                    openOnClick={true}
                                    optionComponent={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "label": <span
                                            style={
                                                  Object {
                                                        "textDecoration": "line-through",
                                                      }
                                            }
                                      >
                                            v4.0.0
                                      </span>,
                                          "value": "v4.0.0",
                                        },
                                      ]
                                    }
                                    pageSize={5}
                                    placeholder="Select..."
                                    removeSelected={true}
                                    required={false}
                                    rtl={false}
                                    scrollMenuIntoView={true}
                                    searchable={true}
                                    simpleValue={false}
                                    tabSelectsValue={true}
                                    trimFilter={true}
                                    value="v4.0.0"
                                    valueComponent={[Function]}
                                    valueKey="value"
                                  >
                                    <div
                                      className="Select has-value is-searchable Select--single"
                                    >
                                      <div
                                        className="Select-control"
                                        onKeyDown={[Function]}
                                        onMouseDown={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                      >
                                        <span
                                          className="Select-multi-value-wrapper"
                                          id="react-select-8--value"
                                        >
                                          <Value
                                            disabled={false}
                                            id="react-select-8--value-item"
                                            instancePrefix="react-select-8-"
                                            onClick={null}
                                            placeholder="Select..."
                                            value={
                                              Object {
                                                "label": <span
                                                  style={
                                                      Object {
                                                          "textDecoration": "line-through",
                                                        }
                                                  }
                                              >
                                                  v4.0.0
                                              </span>,
                                                "value": "v4.0.0",
                                              }
                                            }
                                          >
                                            <div
                                              className="Select-value"
                                            >
                                              <span
                                                aria-selected="true"
                                                className="Select-value-label"
                                                id="react-select-8--value-item"
                                                role="option"
                                              >
                                                <span
                                                  style={
                                                    Object {
                                                      "textDecoration": "line-through",
                                                    }
                                                  }
                                                >
                                                  v4.0.0
                                                </span>
                                              </span>
                                            </div>
                                          </Value>
                                          <AutosizeInput
                                            aria-activedescendant="react-select-8--value"
                                            aria-expanded="false"
                                            aria-haspopup="false"
                                            aria-owns=""
                                            className="Select-input"
                                            injectStyles={true}
                                            minWidth="5"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={false}
                                            role="combobox"
                                            value=""
                                          />
                                        </span>
                                        <span
                                          className="Select-arrow-zone"
                                          onMouseDown={[Function]}
                                        >
                                          <span
                                            className="Select-arrow"
                                            onMouseDown={[Function]}
                                          />
                                        </span>
                                      </div>
                                    </div>
                                  </Select>
                                </div>
                              </Group>
                            </div>
                          </SelectR5Version>
                        </Connect(SelectR5Version)>
                      </div>
                    </div>
                  </div>
                </ProfileRequestEditor>
                <Slider
                  disabled={false}
                  format=".1f"
                  label="Percentile of travel time (reliability) (Regional only)"
                  max={99}
                  min={1}
                  onChange={[Function]}
                  output={true}
                  step={1}
                  value={50}
                >
                  <Group
                    disabled={false}
                    id="percentile-of-travel-time-reliability-regional-only-input-11"
                    label="Percentile of travel time (reliability) (Regional only)"
                    max={99}
                    min={1}
                    onChange={[Function]}
                    step={1}
                    value={50}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="percentile-of-travel-time-reliability-regional-only-input-11"
                      >
                        Percentile of travel time (reliability) (Regional only)
                      </label>
                      <output
                        className="pull-right"
                        htmlFor="percentile-of-travel-time-reliability-regional-only-input-11"
                      >
                        50.0
                      </output>
                      <input
                        className="form-control"
                        disabled={false}
                        id="percentile-of-travel-time-reliability-regional-only-input-11"
                        label="Percentile of travel time (reliability) (Regional only)"
                        max={99}
                        min={1}
                        onChange={[Function]}
                        step={1}
                        type="range"
                        value={50}
                      />
                    </div>
                  </Group>
                </Slider>
                <AdvancedSettings
                  disabled={false}
                  hideBoundsEditor={[Function]}
                  profileRequest={
                    Object {
                      "accessModes": "WALK",
                      "bikeSafe": 1,
                      "bikeSlope": 1,
                      "bikeSpeed": 4.166666666666667,
                      "bikeTime": 1,
                      "bounds": Object {
                        "east": -76,
                        "north": 39,
                        "south": 38,
                        "west": -77,
                      },
                      "bundleId": "1",
                      "date": "2016-01-16",
                      "defaultExpanded": true,
                      "directModes": "WALK",
                      "egressModes": "WALK",
                      "fromLat": 12,
                      "fromLon": 34,
                      "fromTime": 25200,
                      "maxBikeTime": 20,
                      "maxRides": 4,
                      "maxTripDurationMinutes": 60,
                      "maxWalkTime": 20,
                      "monteCarloDraws": 200,
                      "name": "Profile Request Test",
                      "projectId": "1",
                      "reachabilityThreshold": 0,
                      "regionId": "1",
                      "toTime": 32400,
                      "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                      "travelTimePercentile": 50,
                      "variantIndex": 0,
                      "walkSpeed": 1.3888888888888888,
                      "workerVersion": "v4.0.0",
                    }
                  }
                  regionBounds={
                    Object {
                      "east": -76,
                      "north": 39,
                      "south": 38,
                      "west": -77,
                    }
                  }
                  regionalAnalyses={Array []}
                  setProfileRequest={[Function]}
                  showBoundsEditor={[Function]}
                >
                  <section
                    className="panel panel-default inner-panel advanced-panel"
                  >
                    <a
                      className="panel-heading clearfix"
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      tabIndex={0}
                    >
                      <Icon
                        type="gear"
                      >
                        <i
                          className="fa fa-gear fa-fw "
                        />
                      </Icon>
                      <strong>
                        Advanced Settings
                      </strong>
                      <Icon
                        className="pull-right"
                        type="caret-right"
                      >
                        <i
                          className="fa fa-caret-right fa-fw pull-right"
                        />
                      </Icon>
                    </a>
                  </section>
                </AdvancedSettings>
              </div>
            </div>
          </InnerDock>
        </div>
      </div>
    </SinglePointAnalysis>
  </Connect(SinglePointAnalysis)>
</Provider>
`;
